{
 "Resources": {
  "BloodPressureReadings9BAA0546": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "reading_id",
      "AttributeType": "S"
     }
    ],
    "BillingMode": "PAY_PER_REQUEST",
    "KeySchema": [
     {
      "AttributeName": "reading_id",
      "KeyType": "HASH"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureReadings/Resource"
   }
  },
  "BloodPressureReportsA89B6574": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureReports/Resource"
   }
  },
  "BloodPressureReportsPolicy5531E561": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "BloodPressureReportsA89B6574"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "BloodPressureReportsA89B6574",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "BloodPressureReportsA89B6574",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureReports/Policy/Resource"
   }
  },
  "BloodPressureReportsAutoDeleteObjectsCustomResource67895C2B": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "BloodPressureReportsA89B6574"
    }
   },
   "DependsOn": [
    "BloodPressureReportsPolicy5531E561"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureReports/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "BloodPressureReportsA89B6574"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4",
    "aws:asset:property": "Code"
   }
  },
  "PostReadingHandlerServiceRoleBDD0D9AA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/PostReadingHandler/ServiceRole/Resource"
   }
  },
  "PostReadingHandlerServiceRoleDefaultPolicy79067DFD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "BloodPressureReadings9BAA0546",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PostReadingHandlerServiceRoleDefaultPolicy79067DFD",
    "Roles": [
     {
      "Ref": "PostReadingHandlerServiceRoleBDD0D9AA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/PostReadingHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "PostReadingHandler71E883C3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "d99847994d7a6d7a392547bfd3ad98c53fc9e22cf16f0a6d157d108a5348b3c3.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "BloodPressureReadings9BAA0546"
      }
     }
    },
    "Handler": "post_reading.handler",
    "Role": {
     "Fn::GetAtt": [
      "PostReadingHandlerServiceRoleBDD0D9AA",
      "Arn"
     ]
    },
    "Runtime": "python3.9"
   },
   "DependsOn": [
    "PostReadingHandlerServiceRoleDefaultPolicy79067DFD",
    "PostReadingHandlerServiceRoleBDD0D9AA"
   ],
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/PostReadingHandler/Resource",
    "aws:asset:path": "asset.d99847994d7a6d7a392547bfd3ad98c53fc9e22cf16f0a6d157d108a5348b3c3",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "OnDemandReportHandlerServiceRole8446B127": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/OnDemandReportHandler/ServiceRole/Resource"
   }
  },
  "OnDemandReportHandlerServiceRoleDefaultPolicy90164F6B": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "BloodPressureReadings9BAA0546",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "BloodPressureReportsA89B6574",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "BloodPressureReportsA89B6574",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "OnDemandReportHandlerServiceRoleDefaultPolicy90164F6B",
    "Roles": [
     {
      "Ref": "OnDemandReportHandlerServiceRole8446B127"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/OnDemandReportHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "OnDemandReportHandler7EFE933E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "89060c21554823d14333fee59d2cd1dc1fc3217084eb3192be47bfd293a3b7dd.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "BloodPressureReadings9BAA0546"
      },
      "BUCKET_NAME": {
       "Ref": "BloodPressureReportsA89B6574"
      }
     }
    },
    "Handler": "on_demand_report.handler",
    "Role": {
     "Fn::GetAtt": [
      "OnDemandReportHandlerServiceRole8446B127",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 30
   },
   "DependsOn": [
    "OnDemandReportHandlerServiceRoleDefaultPolicy90164F6B",
    "OnDemandReportHandlerServiceRole8446B127"
   ],
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/OnDemandReportHandler/Resource",
    "aws:asset:path": "asset.89060c21554823d14333fee59d2cd1dc1fc3217084eb3192be47bfd293a3b7dd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "WeeklyReportHandlerServiceRole791B3FCE": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/WeeklyReportHandler/ServiceRole/Resource"
   }
  },
  "WeeklyReportHandlerServiceRoleDefaultPolicy9AE1F967": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "BloodPressureReadings9BAA0546",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "BloodPressureReportsA89B6574",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "BloodPressureReportsA89B6574",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "WeeklyReportHandlerServiceRoleDefaultPolicy9AE1F967",
    "Roles": [
     {
      "Ref": "WeeklyReportHandlerServiceRole791B3FCE"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/WeeklyReportHandler/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "WeeklyReportHandler47D9BAE4": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ce5c54811f3dddf9671c07e83f506af1cdebb740801ae011276050ad25ba6b4a.zip"
    },
    "Environment": {
     "Variables": {
      "TABLE_NAME": {
       "Ref": "BloodPressureReadings9BAA0546"
      },
      "BUCKET_NAME": {
       "Ref": "BloodPressureReportsA89B6574"
      }
     }
    },
    "Handler": "weekly_report.handler",
    "Role": {
     "Fn::GetAtt": [
      "WeeklyReportHandlerServiceRole791B3FCE",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "Timeout": 60
   },
   "DependsOn": [
    "WeeklyReportHandlerServiceRoleDefaultPolicy9AE1F967",
    "WeeklyReportHandlerServiceRole791B3FCE"
   ],
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/WeeklyReportHandler/Resource",
    "aws:asset:path": "asset.ce5c54811f3dddf9671c07e83f506af1cdebb740801ae011276050ad25ba6b4a",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "BloodPressureApiEB4E7099": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "BloodPressureApi"
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/Resource"
   }
  },
  "BloodPressureApiCloudWatchRoleB3A9FFE7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/CloudWatchRole/Resource"
   }
  },
  "BloodPressureApiAccount4FF2C954": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "BloodPressureApiCloudWatchRoleB3A9FFE7",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "BloodPressureApiEB4E7099"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/Account"
   }
  },
  "BloodPressureApiDeployment667A99255e003176b28765951575c6b713a58ac9": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "BloodPressureApiEB4E7099"
    }
   },
   "DependsOn": [
    "BloodPressureApireadingsPOST34889728",
    "BloodPressureApireadings64D01F75",
    "BloodPressureApireportPOST32F44562",
    "BloodPressureApireportD2C91FD3"
   ],
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/Deployment/Resource"
   }
  },
  "BloodPressureApiDeploymentStageprodFEDF3E56": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "BloodPressureApiDeployment667A99255e003176b28765951575c6b713a58ac9"
    },
    "RestApiId": {
     "Ref": "BloodPressureApiEB4E7099"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "BloodPressureApiAccount4FF2C954"
   ],
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/DeploymentStage.prod/Resource"
   }
  },
  "BloodPressureApireadings64D01F75": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "BloodPressureApiEB4E7099",
      "RootResourceId"
     ]
    },
    "PathPart": "readings",
    "RestApiId": {
     "Ref": "BloodPressureApiEB4E7099"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/Default/readings/Resource"
   }
  },
  "BloodPressureApireadingsPOSTApiPermissionBloodPressureTrackerStackBloodPressureApi13E9B155POSTreadings16C89A95": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PostReadingHandler71E883C3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BloodPressureApiEB4E7099"
       },
       "/",
       {
        "Ref": "BloodPressureApiDeploymentStageprodFEDF3E56"
       },
       "/POST/readings"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/Default/readings/POST/ApiPermission.BloodPressureTrackerStackBloodPressureApi13E9B155.POST..readings"
   }
  },
  "BloodPressureApireadingsPOSTApiPermissionTestBloodPressureTrackerStackBloodPressureApi13E9B155POSTreadings2BB052D3": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PostReadingHandler71E883C3",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BloodPressureApiEB4E7099"
       },
       "/test-invoke-stage/POST/readings"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/Default/readings/POST/ApiPermission.Test.BloodPressureTrackerStackBloodPressureApi13E9B155.POST..readings"
   }
  },
  "BloodPressureApireadingsPOST34889728": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PostReadingHandler71E883C3",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "BloodPressureApireadings64D01F75"
    },
    "RestApiId": {
     "Ref": "BloodPressureApiEB4E7099"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/Default/readings/POST/Resource"
   }
  },
  "BloodPressureApireportD2C91FD3": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "BloodPressureApiEB4E7099",
      "RootResourceId"
     ]
    },
    "PathPart": "report",
    "RestApiId": {
     "Ref": "BloodPressureApiEB4E7099"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/Default/report/Resource"
   }
  },
  "BloodPressureApireportPOSTApiPermissionBloodPressureTrackerStackBloodPressureApi13E9B155POSTreport69435F10": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OnDemandReportHandler7EFE933E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BloodPressureApiEB4E7099"
       },
       "/",
       {
        "Ref": "BloodPressureApiDeploymentStageprodFEDF3E56"
       },
       "/POST/report"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/Default/report/POST/ApiPermission.BloodPressureTrackerStackBloodPressureApi13E9B155.POST..report"
   }
  },
  "BloodPressureApireportPOSTApiPermissionTestBloodPressureTrackerStackBloodPressureApi13E9B155POSTreport0CCDC727": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "OnDemandReportHandler7EFE933E",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:",
       {
        "Ref": "AWS::Region"
       },
       ":",
       {
        "Ref": "AWS::AccountId"
       },
       ":",
       {
        "Ref": "BloodPressureApiEB4E7099"
       },
       "/test-invoke-stage/POST/report"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/Default/report/POST/ApiPermission.Test.BloodPressureTrackerStackBloodPressureApi13E9B155.POST..report"
   }
  },
  "BloodPressureApireportPOST32F44562": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:",
        {
         "Ref": "AWS::Region"
        },
        ":lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "OnDemandReportHandler7EFE933E",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "BloodPressureApireportD2C91FD3"
    },
    "RestApiId": {
     "Ref": "BloodPressureApiEB4E7099"
    }
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/BloodPressureApi/Default/report/POST/Resource"
   }
  },
  "WeeklyReportRule3E0F4A7C": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "cron(0 2 ? * MON *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "WeeklyReportHandler47D9BAE4",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/WeeklyReportRule/Resource"
   }
  },
  "WeeklyReportRuleAllowEventRuleBloodPressureTrackerStackWeeklyReportHandler6855AE3D16247221": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WeeklyReportHandler47D9BAE4",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "WeeklyReportRule3E0F4A7C",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/WeeklyReportRule/AllowEventRuleBloodPressureTrackerStackWeeklyReportHandler6855AE3D"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21Q206EMBD9ln0vdVf0A9g1Pmkk6PumtCOO0JbQdjek4d/thcia+HQuMHPm9J4eHvZ0v2NXU3DRFwO21L9bxnsSrLMXs2JSi2B+sHYAcvpUiSzElNQfHe/BRnNlGWo9IJ83e9VZHJkJ0wOTrWDUPzvFLWoVf77lNUwSjQlqIcgk9Y3O6Qm3gMziNWdmDFhDqwiEjdgxC1c2U/+Sshowthox7dhoxbl2ypInGAc9S1CpzY0Kb9Gl4EzCqHYTh9jiV6w7M38F+6VFtDJbCFzCIhMquLVCwGW5mXbGavnvsr+f6klfUMCUwlPPeBSqLs68OTu6dP1JK4E2PV09hxPUXUkPJX3cfRvEYgp1UQJtMv4AGXb73wECAAA="
   },
   "Metadata": {
    "aws:cdk:path": "BloodPressureTrackerStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "BloodPressureApiEndpoint4552B421": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "BloodPressureApiEB4E7099"
      },
      ".execute-api.",
      {
       "Ref": "AWS::Region"
      },
      ".",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "BloodPressureApiDeploymentStageprodFEDF3E56"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}